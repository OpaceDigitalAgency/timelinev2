---
import '../styles/global.css';
import { Moon, Sun } from 'lucide-react';

interface Props {
  title: string;
  description?: string;
  ogImage?: string;
}

const { 
  title, 
  description = 'Interactive timeline platform mapping the evolution of religious beliefs across history', 
  ogImage = '/images/og-image.jpg'
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title} | Evolution of Religion</title>
    <meta name="description" content={description} />
    <meta name="author" content="Religious Timeline Project" />
    <meta name="keywords" content="religion, timeline, history, beliefs, religious evolution, faith, spirituality, world religions, comparative religion" />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href={Astro.url.href} />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- Open Graph / Social Media -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:site_name" content="Evolution of Religion Timeline" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />
    <meta name="twitter:site" content="@religiontimeline" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Montserrat:wght@500;600;700&display=swap" rel="stylesheet">
    <!-- Theme toggle script - runs before page load to prevent flash -->
    <script is:inline>
      // Check for saved theme preference or use the system preference
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      
      const theme = getThemePreference();
      
      // Apply the theme class to the html element
      document.documentElement.classList.remove('light', 'dark');
      document.documentElement.classList.add(theme);
      
      // Save the theme preference
      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('theme', theme);
      }
    </script>
  </head>
  <body class="min-h-screen bg-gray-50 dark:bg-gray-900 font-sans text-gray-900 dark:text-gray-100 transition-colors duration-200">
    <!-- Theme Toggle Button -->
    <div class="fixed bottom-4 right-4 z-50">
      <button id="theme-toggle" class="p-2 rounded-full bg-white dark:bg-gray-800 shadow-md hover:shadow-lg transition-all" aria-label="Toggle dark/light mode">
        <Sun id="light-icon" class="h-5 w-5 text-amber-500" />
        <Moon id="dark-icon" class="h-5 w-5 text-indigo-400" />
      </button>
    </div>
    
    <slot />
    
    <script>
      // Theme toggle functionality
      const themeToggle = document.getElementById('theme-toggle');
      const lightIcon = document.getElementById('light-icon');
      const darkIcon = document.getElementById('dark-icon');
      
      // Update the icons based on current theme
      const updateIcons = () => {
        const isDark = document.documentElement.classList.contains('dark');
        // Show sun icon in dark mode (to switch to light), moon icon in light mode (to switch to dark)
        lightIcon.classList.toggle('hidden', !isDark);
        darkIcon.classList.toggle('hidden', isDark);
      };
      
      // Initialize icons
      updateIcons();
      
      // Toggle theme when button is clicked
      if (themeToggle && lightIcon && darkIcon) {
        themeToggle.addEventListener('click', () => {
          const isDark = document.documentElement.classList.contains('dark');
          const newTheme = isDark ? 'light' : 'dark';
          
          document.documentElement.classList.remove('light', 'dark');
          document.documentElement.classList.add(newTheme);
          
          if (typeof localStorage !== 'undefined') {
            localStorage.setItem('theme', newTheme);
          }
          
          updateIcons();
        });
      }
    </script>
  </body>
</html>