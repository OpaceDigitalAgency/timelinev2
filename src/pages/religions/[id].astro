---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import EditableSection from '../../components/EditableSection';
import { fetchReligionBySlug, fetchReligions, fetchEras } from '../../lib/services/religionService';
import { Clock, Book, Users, MapPin, Edit, Share2, ArrowLeft, Heart, Brain, Compass, Sparkles } from 'lucide-react';
import { createSlug } from '../../lib/utils';

export async function getStaticPaths() {
  const religions = await fetchReligions();
  return religions.map(religion => {
    const slug = createSlug(religion.name);
    return {
      params: { id: slug },
      props: { slug },
    };
  });
}

const { slug } = Astro.props;
const religion = await fetchReligionBySlug(slug);

if (!religion) {
  return Astro.redirect('/404');
}

// Verify the slug matches the religion name
const correctSlug = createSlug(religion.name);
if (slug !== correctSlug) {
  return Astro.redirect(`/religions/${correctSlug}`);
}

function formatYear(year: number): string {
  return year < 0 ? `${Math.abs(year)} BCE` : `${year} CE`;
}

function formatPopulation(population?: number): string {
  if (!population) return 'Unknown';
  return population.toLocaleString();
}

// Get related religions
const allReligions = await fetchReligions();
const relatedReligions = religion.parentReligions?.map(id => allReligions.find(r => r.id === id)).filter(Boolean) || [];
const childReligions = religion.childReligions?.map(id => allReligions.find(r => r.id === id)).filter(Boolean) || [];

// Get era information
import { fetchEras } from '../../lib/services/religionService';
const eras = await fetchEras();
let eraInfo = '';
if (religion.era && typeof religion.era === 'object' && 'name' in religion.era) {
  eraInfo = religion.era.name;
} else if (religion.era) {
  const eraObj = eras.find(e => e.id === religion.era);
  eraInfo = eraObj ? eraObj.name : '';
}

// Get religions from the same era for "More from" section
const sameEraReligions = allReligions
  .filter(r => r.era === religion.era && r.id !== religion.id)
  .slice(0, 3);

// Last updated timestamp - in a real app, this would come from the database
const lastUpdated = new Date().toLocaleDateString('en-GB');

// Belief in afterlife and reincarnation - in a real app, these would be properties of the religion object
const believesInAfterlife = religion.beliefs?.includes('Monotheism') || religion.beliefs?.includes('Polytheism');
const believesInReincarnation = religion.beliefs?.includes('Pantheism') || religion.beliefs?.includes('Nontheism');

// Create structured data (JSON-LD)
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "Thing",
  "name": religion.name,
  "description": religion.description,
  "url": new URL(`/religions/${slug}`, Astro.site).href,
  "image": religion.imageUrl,
  "sameAs": [
    `https://en.wikipedia.org/wiki/${encodeURIComponent(religion.name)}`
  ],
  "subjectOf": {
    "@type": "CreativeWork",
    "name": "Evolution of Man",
    "description": "An interactive timeline mapping the evolution of humanity across history and geography."
  }
};
---

<Layout title={religion.name} description={religion.summary} ogImage={religion.imageUrl}>
  <Header />
  
  <main>
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
    
    <!-- Navigation Bar -->
    <div class="bg-gray-100 py-3 border-b border-gray-200">
      <div class="container mx-auto px-4">
        <div class="flex justify-between items-center">
          <a href="/timeline" class="text-primary-600 hover:text-primary-800 inline-flex items-center">
            <ArrowLeft className="h-4 w-4 mr-1" />
            <span>Back to Timeline</span>
          </a>
          <button id="share-button" class="text-gray-600 hover:text-primary-600 inline-flex items-center">
            <Share2 className="h-4 w-4 mr-1" />
            <span>Share</span>
          </button>
        </div>
      </div>
    </div>
    
    <!-- Hero Section -->
    <div class="relative bg-gradient-to-r from-gray-900 to-primary-900 text-white py-16">
      <div class="absolute inset-0 bg-center bg-cover opacity-30" style={`background-image: url(${religion.imageUrl}?w=1920&h=600&auto=format&fit=crop&q=80)`}></div>
      <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-4xl">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">{religion.name}</h1>
          <p class="text-xl text-gray-200 mb-6">{religion.summary}</p>
          
          <div class="flex flex-wrap gap-6 text-white/80">
            <div class="flex items-center">
              <Clock className="h-5 w-5 mr-2" />
              <span>Founded: {formatYear(religion.foundingYear)}</span>
            </div>
            
            {religion.founderName && (
              <div class="flex items-center">
                <Users className="h-5 w-5 mr-2" />
                <span>Founder: {religion.founderName}</span>
              </div>
            )}
            
            <div class="flex items-center">
              <MapPin className="h-5 w-5 mr-2" />
              <span>Origin: {religion.originCountry}</span>
            </div>
            
            {religion.approxFollowers && (
              <div class="flex items-center">
                <Users className="h-5 w-5 mr-2" />
                <span>Followers: {formatPopulation(religion.approxFollowers)}</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
    
    <!-- Content Section -->
    <div class="container mx-auto px-4 py-12">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Main Content -->
        <div class="lg:w-2/3">
          <!-- Overview -->
          <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <h2 class="text-2xl font-bold mb-4">Overview</h2>
            <EditableSection
              client:only="react"
              label="Overview"
              value={religion.description || ""}
              textarea={true}
              onSubmit={(newValue, details) => {
                // For now, just log the submission. In a real app, send to backend for review.
                console.log("Overview change submitted:", { newValue, details });
              }}
              className="mb-6"
            />
            
            {religion.beliefs.length > 0 && (
              <div class="mb-6">
                <EditableSection
                  client:only="react"
                  label="Core Beliefs"
                  value={religion.beliefs.join('\n')}
                  textarea={true}
                  onSubmit={(newValue, details) => {
                    // For now, just log the submission. In a real app, send to backend for review.
                    console.log("Core Beliefs change submitted:", { newValue, details });
                  }}
                  className="mb-3"
                >
                  <h3 class="text-xl font-semibold mb-3">Core Beliefs</h3>
                  <div class="flex flex-wrap gap-2 mb-3">
                    {religion.beliefs.map(belief => (
                      <span class="bg-blue-50 text-blue-700 px-3 py-1 rounded-full text-sm">{belief}</span>
                    ))}
                  </div>
                  <p class="text-gray-700">
                    {religion.name} is characterized by its {religion.beliefs.join(', ').toLowerCase()} approach to understanding the divine and spiritual reality.
                  </p>
                </EditableSection>
              </div>
            )}
          </div>
          
          <!-- Key Teachings and Beliefs Section -->
          <div class="mb-8">
            <h2 class="text-2xl font-bold mb-4 flex items-center">
              <Sparkles className="h-6 w-6 text-primary-600 mr-2" />
              Key Teachings and Beliefs
            </h2>
            
            <!-- Main Teachings Card -->
            <div class="bg-white rounded-lg shadow-md p-6 mb-4 border-l-4 border-blue-500">
              <EditableSection
                client:only="react"
                label="Main Teachings"
                value={"The Dreamtime or Dreaming explains creation, natural features, and social laws. These oral traditions vary among different Aboriginal groups but share common elements of ancestry, totems, and sacred sites."}
                textarea={true}
                onSubmit={(newValue, details) => {
                  console.log("Main Teachings change submitted:", { newValue, details });
                }}
                className="mb-3"
              >
                <div class="flex items-center mb-3">
                  <Book className="h-5 w-5 text-blue-500 mr-2" />
                  <h3 class="text-xl font-semibold">Main Teachings</h3>
                </div>
                <p class="text-gray-700">
                  The Dreamtime or Dreaming explains creation, natural features, and social laws. These oral traditions vary among different Aboriginal groups but share common elements of ancestry, totems, and sacred sites.
                </p>
              </EditableSection>
            </div>
            
            <!-- Metaphysical Beliefs Card -->
            <div class="bg-white rounded-lg shadow-md p-6 mb-4 border-l-4 border-purple-500">
              <div class="flex items-center mb-3">
                <Brain className="h-5 w-5 text-purple-500 mr-2" />
                <h3 class="text-xl font-semibold">Metaphysical Beliefs</h3>
              </div>
              <EditableSection
                client:only="react"
                label="Metaphysical Beliefs"
                value={"Ancestral beings shaped the landscape and established laws during the Dreamtime. Their spirits remain in the land. Time is non-linear, with past, present, and future interconnected. Sacred sites contain spiritual power."}
                textarea={true}
                onSubmit={(newValue, details) => {
                  console.log("Metaphysical Beliefs change submitted:", { newValue, details });
                }}
                className="mb-3"
              >
                <div class="flex items-center mb-3">
                  <Brain className="h-5 w-5 text-purple-500 mr-2" />
                  <h3 class="text-xl font-semibold">Metaphysical Beliefs</h3>
                </div>
                <p class="text-gray-700">
                  Ancestral beings shaped the landscape and established laws during the Dreamtime. Their spirits remain in the land. Time is non-linear, with past, present, and future interconnected. Sacred sites contain spiritual power.
                </p>
              </EditableSection>
            </div>
            
            <!-- Ethical and Moral Principles Card -->
            <div class="bg-white rounded-lg shadow-md p-6 mb-4 border-l-4 border-green-500">
              <div class="flex items-center mb-3">
                <Compass className="h-5 w-5 text-green-500 mr-2" />
                <h3 class="text-xl font-semibold">Ethical and Moral Principles</h3>
              </div>
              <EditableSection
                client:only="react"
                label="Ethical and Moral Principles"
                value={"Living in harmony with nature and maintaining balance in social relationships are paramount. Knowledge is shared according to one's readiness and role. Respect for elders and ancestors guides social norms."}
                textarea={true}
                onSubmit={(newValue, details) => {
                  console.log("Ethical and Moral Principles change submitted:", { newValue, details });
                }}
                className="mb-3"
              >
                <div class="flex items-center mb-3">
                  <Compass className="h-5 w-5 text-green-500 mr-2" />
                  <h3 class="text-xl font-semibold">Ethical and Moral Principles</h3>
                </div>
                <p class="text-gray-700">
                  Living in harmony with nature and maintaining balance in social relationships are paramount. Knowledge is shared according to one's readiness and role. Respect for elders and ancestors guides social norms.
                </p>
              </EditableSection>
            </div>
          </div>
          
          <!-- Practices and Traditions Section -->
          <div class="mb-8">
            <h2 class="text-2xl font-bold mb-4">Practices and Traditions</h2>
            
            <!-- Ritual and Devotional Practices Card -->
            <div class="bg-white rounded-lg shadow-md p-6 mb-4 border-l-4 border-amber-500">
              <div class="flex items-center mb-3">
                <Sparkles className="h-5 w-5 text-amber-500 mr-2" />
                <h3 class="text-xl font-semibold">Ritual and Devotional Practices</h3>
              </div>
              <EditableSection
                client:only="react"
                label="Ritual and Devotional Practices"
                value={"Ceremonies connect participants to the Dreamtime through music, dance, and body decoration. Songlines follow ancestral journeys across the landscape. Initiation rites mark life transitions. Sacred sites require proper protocols."}
                textarea={true}
                onSubmit={(newValue, details) => {
                  console.log("Ritual and Devotional Practices change submitted:", { newValue, details });
                }}
                className="mb-3"
              >
                <div class="flex items-center mb-3">
                  <Sparkles className="h-5 w-5 text-amber-500 mr-2" />
                  <h3 class="text-xl font-semibold">Ritual and Devotional Practices</h3>
                </div>
                <p class="text-gray-700">
                  Ceremonies connect participants to the Dreamtime through music, dance, and body decoration. Songlines follow ancestral journeys across the landscape. Initiation rites mark life transitions. Sacred sites require proper protocols.
                </p>
              </EditableSection>
            </div>
            
            {religion.practices && religion.practices.length > 0 && (
              <EditableSection
                client:only="react"
                label="Key Practices"
                value={religion.practices.join('\n')}
                textarea={true}
                onSubmit={(newValue, details) => {
                  console.log("Key Practices change submitted:", { newValue, details });
                }}
                className="mb-4"
              >
                <h3 class="text-xl font-semibold mb-3">Key Practices</h3>
                <ul class="list-disc pl-6 space-y-2 text-gray-700">
                  {religion.practices.map(practice => (
                    <li>{practice}</li>
                  ))}
                </ul>
              </EditableSection>
            )}
          </div>
          
          <!-- Historical Context Section -->
          <div class="mb-8">
            <h2 class="text-2xl font-bold mb-4 flex items-center">
              <Book className="h-6 w-6 text-primary-600 mr-2" />
              Historical Context
            </h2>
            <div class="bg-white rounded-lg shadow-md p-6">
              <EditableSection
                client:only="react"
                label="Historical Context"
                value={`${religion.name} developed over thousands of years through oral traditions. The historical context includes the migration patterns, cultural exchanges, and environmental adaptations that shaped its development.`}
                textarea={true}
                onSubmit={(newValue, details) => {
                  console.log("Historical Context change submitted:", { newValue, details });
                }}
                className="mb-2"
              >
                <p class="text-gray-700">
                  {religion.name} developed over thousands of years through oral traditions. The historical context includes the migration patterns, cultural exchanges, and environmental adaptations that shaped its development.
                </p>
              </EditableSection>
            </div>
          </div>
          
          <!-- Organization and Key Figures Section -->
          <div class="mb-8">
            <h2 class="text-2xl font-bold mb-4 flex items-center">
              <Users className="h-6 w-6 text-primary-600 mr-2" />
              Organization and Key Figures
            </h2>
            <div class="bg-white rounded-lg shadow-md p-6">
              {religion.keyFigures && religion.keyFigures.length > 0 ? (
                <EditableSection
                  client:only="react"
                  label="Notable Figures"
                  value={religion.keyFigures.join('\n')}
                  textarea={true}
                  onSubmit={(newValue, details) => {
                    console.log("Notable Figures change submitted:", { newValue, details });
                  }}
                  className="mb-3"
                >
                  <h3 class="text-xl font-semibold mb-3">Notable Figures</h3>
                  <ul class="space-y-2">
                    {religion.keyFigures.map(figure => (
                      <li class="flex items-center space-x-2">
                        <span class="w-2 h-2 rounded-full bg-primary-600"></span>
                        <span>{figure}</span>
                      </li>
                    ))}
                  </ul>
                </EditableSection>
              ) : (
                <EditableSection
                  client:only="react"
                  label="Organization and Key Figures"
                  value={`${religion.name} is organized through traditional community structures with elders serving as knowledge keepers and spiritual guides. Leadership roles are often determined by age, knowledge, and spiritual connection.`}
                  textarea={true}
                  onSubmit={(newValue, details) => {
                    console.log("Organization and Key Figures change submitted:", { newValue, details });
                  }}
                  className="mb-2"
                >
                  <p class="text-gray-700">
                    {religion.name} is organized through traditional community structures with elders serving as knowledge keepers and spiritual guides. Leadership roles are often determined by age, knowledge, and spiritual connection.
                  </p>
                </EditableSection>
              )}
            </div>
          </div>
          
          {religion.holyTexts && religion.holyTexts.length > 0 && (
            <EditableSection
              client:only="react"
              label="Sacred Texts"
              value={religion.holyTexts.join('\n')}
              textarea={true}
              onSubmit={(newValue, details) => {
                console.log("Sacred Texts change submitted:", { newValue, details });
              }}
              className="mb-8"
            >
              <div class="flex items-center mb-4">
                <Book className="h-6 w-6 text-primary-600 mr-2" />
                <h2 class="text-2xl font-bold">Sacred Texts</h2>
              </div>
              <div class="space-y-4">
                {religion.holyTexts.map(text => (
                  <div class="border-l-4 border-primary-200 pl-4 py-1">
                    <h3 class="text-lg font-medium text-gray-900">{text}</h3>
                  </div>
                ))}
              </div>
            </EditableSection>
          )}
          
          {religion.branches && religion.branches.length > 0 && (
            <EditableSection
              client:only="react"
              label="Major Branches"
              value={religion.branches.join('\n')}
              textarea={true}
              onSubmit={(newValue, details) => {
                console.log("Major Branches change submitted:", { newValue, details });
              }}
              className="mb-8"
            >
              <h2 class="text-2xl font-bold mb-4">Major Branches</h2>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {religion.branches.map(branch => (
                  <div class="bg-gray-50 rounded-lg p-4">
                    <h3 class="text-lg font-medium text-gray-900">{branch}</h3>
                  </div>
                ))}
              </div>
              </EditableSection>
          )}
        </div>
        
        <!-- Sidebar -->
        <div class="lg:w-1/3">
          <!-- Belief Indicators -->
          <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <div class="grid grid-cols-2 gap-4">
              <div class="bg-gray-50 p-4 rounded-lg">
                <h4 class="font-medium mb-2 flex items-center">
                  <Heart className="h-4 w-4 text-red-500 mr-1" />
                  Belief in Afterlife
                </h4>
                <div class="text-lg font-semibold text-green-600">Yes</div>
              </div>
              <div class="bg-gray-50 p-4 rounded-lg">
                <h4 class="font-medium mb-2 flex items-center">
                  <Sparkles className="h-4 w-4 text-purple-500 mr-1" />
                  Belief in Reincarnation
                </h4>
                <div class="text-lg font-semibold text-green-600">Yes</div>
              </div>
            </div>
          </div>
        
          <!-- Timeline Position -->
          <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <h3 class="text-xl font-semibold mb-3">Timeline Position</h3>
            <a href="/timeline" class="text-primary-600 hover:text-primary-800 inline-flex items-center mb-4">
              <span>View on Timeline</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
            </a>
            
            <div class="bg-gray-100 p-4 rounded-lg relative">
              <div class="w-full h-2 bg-gray-300 rounded-full mb-6 relative">
                <div class="absolute w-3 h-3 rounded-full bg-primary-600 top-[-2px]" style={`left: ${Math.min(Math.max((religion.foundingYear + 10000) / 20000 * 100, 0), 100)}%`}></div>
              </div>
              <div class="flex justify-between text-xs text-gray-500 mb-2">
                <span>10,000 BCE</span>
                <span>0</span>
                <span>Present</span>
              </div>
              
              <p class="text-sm text-gray-700">
                {religion.name} emerged in {formatYear(religion.foundingYear)} during the {eraInfo || 'historical'} period.
              </p>
            </div>
          </div>
          
          <!-- Religious Connections -->
          {(relatedReligions.length > 0 || childReligions.length > 0) && (
            <div class="bg-white rounded-lg shadow-md p-6 mb-6">
              <h3 class="text-xl font-semibold mb-3">Religious Connections</h3>
              
              {relatedReligions.length > 0 && (
                <div class="mb-4">
                  <h4 class="text-lg font-medium mb-2">Parent Traditions</h4>
                  <div class="space-y-2">
                    {relatedReligions.map(rel => rel && (
                      <a href={`/religions/${createSlug(rel.name)}`} class="block bg-gray-50 p-3 rounded hover:bg-gray-100 transition-colors">
                        <div class="font-medium">{rel.name}</div>
                        <div class="text-sm text-gray-500">{formatYear(rel.foundingYear)}</div>
                      </a>
                    ))}
                  </div>
                </div>
              )}
              
              {childReligions.length > 0 && (
                <div>
                  <h4 class="text-lg font-medium mb-2">Derived Traditions</h4>
                  <div class="space-y-2">
                    {childReligions.map(rel => rel && (
                      <a href={`/religions/${createSlug(rel.name)}`} class="block bg-gray-50 p-3 rounded hover:bg-gray-100 transition-colors">
                        <div class="font-medium">{rel.name}</div>
                        <div class="text-sm text-gray-500">{formatYear(rel.foundingYear)}</div>
                      </a>
                    ))}
                  </div>
                </div>
              )}
            </div>
          )}
          
          <!-- Key Figures -->
          {religion.keyFigures && religion.keyFigures.length > 0 && (
            <div class="bg-white rounded-lg shadow-md p-6">
              <h3 class="text-xl font-semibold mb-3">Key Figures</h3>
              <ul class="space-y-2">
                {religion.keyFigures.map(figure => (
                  <li class="flex items-center space-x-2">
                    <span class="w-2 h-2 rounded-full bg-primary-600"></span>
                    <span>{figure}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
      </div>
    </div>
    
    <!-- More from Ancient Section -->
    <div class="bg-gray-50 py-12 border-t border-gray-200">
      <div class="container mx-auto px-4">
        <h2 class="text-2xl font-bold mb-6">More from {eraInfo || 'Ancient'}</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {sameEraReligions.map(rel => (
            <a href={`/religions/${createSlug(rel.name)}`} class="bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow p-4">
              <h3 class="font-bold text-lg mb-2">{rel.name}</h3>
              <p class="text-gray-600 text-sm mb-3">{rel.summary}</p>
              <div class="flex items-center text-xs text-gray-500">
                <Clock className="h-3 w-3 mr-1" />
                <span>{formatYear(rel.foundingYear)}</span>
              </div>
            </a>
          ))}
        </div>
      </div>
    </div>
    
    <!-- Contribute CTA -->
    <div class="bg-gray-100 py-10">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-2xl font-bold mb-4">Help Improve This Page</h2>
        <p class="text-gray-600 max-w-3xl mx-auto mb-6">
          Do you have expertise or additional information about {religion.name}? Contribute to our knowledge base by suggesting edits or additions to this page.
        </p>
        <div class="flex flex-col sm:flex-row items-center justify-center gap-4">
          <a href="/login" class="btn btn-secondary inline-flex items-center">
            Sign in to suggest edits
          </a>
          <a href={`/suggest?religion=${createSlug(religion.name)}`} class="btn btn-primary inline-flex items-center">
            <Edit className="h-4 w-4 mr-2" />
            Suggest an Edit
          </a>
        </div>
      </div>
    </div>
    
    <!-- Last Updated -->
    <div class="container mx-auto px-4 py-4 text-center">
      <p class="text-sm text-gray-500">Last updated: {lastUpdated}</p>
    </div>
  </main>
  
  <Footer />
</Layout>

<style>
  /* Custom styling for scrolling timeline */
  .timeline-scroll {
    overflow-x: auto;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
  }
</style>

<script>
  // Share button functionality
  const shareButton = document.getElementById('share-button');
  if (shareButton) {
    shareButton.addEventListener('click', async () => {
      try {
        if (navigator.share) {
          await navigator.share({
            title: document.title,
            url: window.location.href
          });
        } else {
          // Fallback for browsers that don't support the Web Share API
          navigator.clipboard.writeText(window.location.href);
          alert('Link copied to clipboard!');
        }
      } catch (error) {
        console.error('Error sharing:', error);
      }
    });
  }
</script>