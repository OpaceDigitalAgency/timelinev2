---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { fetchReligionById, fetchReligions } from '../../lib/services/religionService';
import { Clock, Book, Users, MapPin, Edit } from 'lucide-react';

export async function getStaticPaths() {
  const religions = await fetchReligions();
  return religions.map(religion => ({
    params: { id: religion.id },
    props: { religionId: religion.id },
  }));
}

const { religionId } = Astro.props;
const religion = await fetchReligionById(religionId);

if (!religion) {
  return Astro.redirect('/404');
}

function formatYear(year: number): string {
  return year < 0 ? `${Math.abs(year)} BCE` : `${year} CE`;
}

function formatPopulation(population?: number): string {
  if (!population) return 'Unknown';
  return population.toLocaleString();
}

// Get related religions
const allReligions = await fetchReligions();
const relatedReligions = religion.parentReligions?.map(id => allReligions.find(r => r.id === id)).filter(Boolean) || [];
const childReligions = religion.childReligions?.map(id => allReligions.find(r => r.id === id)).filter(Boolean) || [];

// Get era information
const eraInfo = religion.era ? allReligions.find(r => r.era === religion.era)?.era : '';

// Create structured data (JSON-LD)
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "Thing",
  "name": religion.name,
  "description": religion.description,
  "url": new URL(`/religions/${religion.id}`, Astro.site).href,
  "image": religion.imageUrl,
  "sameAs": [
    `https://en.wikipedia.org/wiki/${encodeURIComponent(religion.name)}`
  ],
  "subjectOf": {
    "@type": "CreativeWork",
    "name": "Evolution of Religion Timeline",
    "description": "An interactive timeline mapping the evolution of religious beliefs across history and geography."
  }
};
---

<Layout title={religion.name} description={religion.summary} ogImage={religion.imageUrl}>
  <Header />
  
  <main>
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
    
    <!-- Hero Section -->
    <div class="relative bg-gradient-to-r from-gray-900 to-primary-900 text-white py-16">
      <div class="absolute inset-0 bg-center bg-cover opacity-30" style={`background-image: url(${religion.imageUrl}?w=1920&h=600&auto=format&fit=crop&q=80)`}></div>
      <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-4xl">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">{religion.name}</h1>
          <p class="text-xl text-gray-200 mb-6">{religion.summary}</p>
          
          <div class="flex flex-wrap gap-6 text-white/80">
            <div class="flex items-center">
              <Clock className="h-5 w-5 mr-2" />
              <span>Founded: {formatYear(religion.foundingYear)}</span>
            </div>
            
            {religion.founderName && (
              <div class="flex items-center">
                <Users className="h-5 w-5 mr-2" />
                <span>Founder: {religion.founderName}</span>
              </div>
            )}
            
            <div class="flex items-center">
              <MapPin className="h-5 w-5 mr-2" />
              <span>Origin: {religion.originCountry}</span>
            </div>
            
            {religion.approxFollowers && (
              <div class="flex items-center">
                <Users className="h-5 w-5 mr-2" />
                <span>Followers: {formatPopulation(religion.approxFollowers)}</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
    
    <!-- Content Section -->
    <div class="container mx-auto px-4 py-12">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Main Content -->
        <div class="lg:w-2/3">
          <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <h2 class="text-2xl font-bold mb-4">Overview</h2>
            <p class="text-gray-700 leading-relaxed mb-6">{religion.description}</p>
            
            {religion.beliefs.length > 0 && (
              <div class="mb-6">
                <h3 class="text-xl font-semibold mb-3">Core Beliefs</h3>
                <div class="flex flex-wrap gap-2 mb-3">
                  {religion.beliefs.map(belief => (
                    <span class="bg-blue-50 text-blue-700 px-3 py-1 rounded-full text-sm">{belief}</span>
                  ))}
                </div>
                <p class="text-gray-700">
                  {religion.name} is characterized by its {religion.beliefs.join(', ').toLowerCase()} approach to understanding the divine and spiritual reality.
                </p>
              </div>
            )}
            
            {religion.practices && religion.practices.length > 0 && (
              <div class="mb-6">
                <h3 class="text-xl font-semibold mb-3">Key Practices</h3>
                <ul class="list-disc pl-6 space-y-2 text-gray-700">
                  {religion.practices.map(practice => (
                    <li>{practice}</li>
                  ))}
                </ul>
              </div>
            )}
          </div>
          
          {religion.holyTexts && religion.holyTexts.length > 0 && (
            <div class="bg-white rounded-lg shadow-md p-6 mb-8">
              <div class="flex items-center mb-4">
                <Book className="h-6 w-6 text-primary-600 mr-2" />
                <h2 class="text-2xl font-bold">Sacred Texts</h2>
              </div>
              <div class="space-y-4">
                {religion.holyTexts.map(text => (
                  <div class="border-l-4 border-primary-200 pl-4 py-1">
                    <h3 class="text-lg font-medium text-gray-900">{text}</h3>
                  </div>
                ))}
              </div>
            </div>
          )}
          
          {religion.branches && religion.branches.length > 0 && (
            <div class="bg-white rounded-lg shadow-md p-6 mb-8">
              <h2 class="text-2xl font-bold mb-4">Major Branches</h2>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {religion.branches.map(branch => (
                  <div class="bg-gray-50 rounded-lg p-4">
                    <h3 class="text-lg font-medium text-gray-900">{branch}</h3>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
        
        <!-- Sidebar -->
        <div class="lg:w-1/3">
          <!-- Timeline Position -->
          <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <h3 class="text-xl font-semibold mb-3">Timeline Position</h3>
            <a href="/timeline" class="text-primary-600 hover:text-primary-800 inline-flex items-center mb-4">
              <span>View on Timeline</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
            </a>
            
            <div class="bg-gray-100 p-4 rounded-lg relative">
              <div class="w-full h-2 bg-gray-300 rounded-full mb-6 relative">
                <div class="absolute w-3 h-3 rounded-full bg-primary-600 top-[-2px]" style={`left: ${Math.min(Math.max(((religion.foundingYear + 10000) / 20000) * 100, 0), 100)}%`}></div>
              </div>
              <div class="flex justify-between text-xs text-gray-500 mb-2">
                <span>10,000 BCE</span>
                <span>0</span>
                <span>Present</span>
              </div>
              
              <p class="text-sm text-gray-700">
                {religion.name} emerged in {formatYear(religion.foundingYear)} during the {eraInfo || 'historical'} period.
              </p>
            </div>
          </div>
          
          <!-- Religious Connections -->
          {(relatedReligions.length > 0 || childReligions.length > 0) && (
            <div class="bg-white rounded-lg shadow-md p-6 mb-6">
              <h3 class="text-xl font-semibold mb-3">Religious Connections</h3>
              
              {relatedReligions.length > 0 && (
                <div class="mb-4">
                  <h4 class="text-lg font-medium mb-2">Parent Traditions</h4>
                  <div class="space-y-2">
                    {relatedReligions.map(rel => rel && (
                      <a href={`/religions/${rel.id}`} class="block bg-gray-50 p-3 rounded hover:bg-gray-100 transition-colors">
                        <div class="font-medium">{rel.name}</div>
                        <div class="text-sm text-gray-500">{formatYear(rel.foundingYear)}</div>
                      </a>
                    ))}
                  </div>
                </div>
              )}
              
              {childReligions.length > 0 && (
                <div>
                  <h4 class="text-lg font-medium mb-2">Derived Traditions</h4>
                  <div class="space-y-2">
                    {childReligions.map(rel => rel && (
                      <a href={`/religions/${rel.id}`} class="block bg-gray-50 p-3 rounded hover:bg-gray-100 transition-colors">
                        <div class="font-medium">{rel.name}</div>
                        <div class="text-sm text-gray-500">{formatYear(rel.foundingYear)}</div>
                      </a>
                    ))}
                  </div>
                </div>
              )}
            </div>
          )}
          
          <!-- Key Figures -->
          {religion.keyFigures && religion.keyFigures.length > 0 && (
            <div class="bg-white rounded-lg shadow-md p-6">
              <h3 class="text-xl font-semibold mb-3">Key Figures</h3>
              <ul class="space-y-2">
                {religion.keyFigures.map(figure => (
                  <li class="flex items-center space-x-2">
                    <span class="w-2 h-2 rounded-full bg-primary-600"></span>
                    <span>{figure}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
      </div>
    </div>
    
    <!-- Contribute CTA -->
    <div class="bg-gray-100 py-10">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-2xl font-bold mb-4">Help Improve This Page</h2>
        <p class="text-gray-600 max-w-3xl mx-auto mb-6">
          Do you have expertise or additional information about {religion.name}? Contribute to our knowledge base by suggesting edits or additions to this page.
        </p>
        <a href={`/suggest?religion=${religion.id}`} class="btn btn-primary inline-flex items-center">
          <Edit className="h-4 w-4 mr-2" />
          Suggest an Edit
        </a>
      </div>
    </div>
  </main>
  
  <Footer />
</Layout>

<style>
  /* Custom styling for scrolling timeline */
  .timeline-scroll {
    overflow-x: auto;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
  }
</style>