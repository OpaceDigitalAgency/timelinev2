---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import TimelineFilters from '../../components/TimelineFilters.astro';
import HorizontalTimeline from '../../components/HorizontalTimeline';
import { fetchReligions, fetchEras, countReligions } from '../../lib/services/religionService';

export async function getStaticPaths() {
  const religions = await fetchReligions();
  
  // Get all unique continents/origins
  const origins = [...new Set(religions
    .map(r => r.continent)
    .filter(Boolean)
  )];
  
  return origins.map(origin => {
    // Handle continents with slashes by replacing them with hyphens
    const slug = origin.toLowerCase().replace(/\s+/g, '-').replace(/\//g, '-');
    return {
      params: { slug },
      props: { origin }
    };
  });
}

const { origin } = Astro.props;
const { slug } = Astro.params;

// Get all data
const allReligions = await fetchReligions();
const allEras = await fetchEras();
const totalCount = await countReligions();

// Filter religions by origin/continent
const religions = allReligions.filter(r => {
  // Handle the case where the continent has slashes in the database
  // but hyphens in the URL
  const continentLower = r.continent?.toLowerCase();
  const originLower = origin.toLowerCase();
  
  return continentLower === originLower ||
         continentLower?.replace(/\//g, '-') === originLower ||
         r.originCountry?.toLowerCase().includes(originLower);
});

// SEO meta
const pageTitle = `${origin} Religious Traditions - Timeline`;
const canonicalUrl = new URL(`/origin/${slug}/`, Astro.site || 'https://evolution-of-religion.netlify.app').href;
const description = `Explore religious traditions originating from ${origin} throughout human history with our interactive timeline.`;
---

<Layout title={pageTitle}>
  <head slot="head">
    <link rel="canonical" href={canonicalUrl} />
    <meta name="description" content={description} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalUrl} />
  </head>
  <Header />
  
  <div class="min-h-screen flex flex-col">
    <div class="container mx-auto px-4 py-8">
      <h1 class="text-3xl font-bold mb-2">Religious Traditions from {origin}</h1>
      <p class="text-lg text-gray-600 max-w-3xl mb-2">
        Explore how religious beliefs from {origin} have evolved, connected, and diverged throughout human history.
      </p>
      <div class="text-sm text-gray-600 mb-4">
        <p>This timeline visualization presents a chronological view of religious traditions originating from {origin}.</p>
        <p>Each node represents a distinct religious tradition, with colors indicating whether the religion is active, extinct, or evolved into newer forms.</p>
      </div>
      <p class="text-sm text-gray-500 mb-6">
        Showing {religions.length} of {totalCount} total religions in the database.
      </p>
    </div>
    
    <TimelineFilters currentView="horizontal" initialFilters={{ eras: [], continents: [origin], beliefs: [], statuses: [] }} />
    
    <main class="flex-grow">
      <div class="container mx-auto px-4 py-4">
        <div id="timeline-container" class="mt-4">
          <div id="horizontal-view">
            <HorizontalTimeline client:only="react" religions={religions} eras={allEras} />
            <div class="sr-only">
              <h2>Timeline of Religious Traditions from {origin}</h2>
              <ul>
                {religions.map(religion => {
                  return (
                    <li>
                      <h3>{religion.name} ({religion.foundingYear < 0 ? Math.abs(religion.foundingYear) + ' BCE' : religion.foundingYear + ' CE'})</h3>
                      <p>{religion.summary}</p>
                      {religion.beliefs && religion.beliefs.length > 0 && (
                        <div>
                          <h4>Key Beliefs:</h4>
                          <ul>
                            {religion.beliefs.map(belief => (
                              <li>{belief}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      <a href={`/religions/${religion.id}`}>View details about {religion.name}</a>
                    </li>
                  );
                })}
              </ul>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>

  <Footer />
</Layout>