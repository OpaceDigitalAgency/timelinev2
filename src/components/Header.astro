---
import { BookOpen, Search, Menu, X, Moon, Sun } from 'lucide-react';
---

<header class="bg-white shadow-sm sticky top-0 z-50">
  <div class="container mx-auto px-4 py-3 flex items-center justify-between">
    <a href="/" class="flex items-center space-x-2">
      <BookOpen className="h-6 w-6 text-primary-600" />
      <span class="font-heading font-bold text-xl">Evolution of Man</span>
    </a>
    
    <div class="hidden md:flex items-center space-x-6">
      <nav class="flex items-center space-x-6">
        <a href="/" class="text-gray-700 hover:text-primary-600 transition-colors">Home</a>
        <a href="/timeline" class="text-gray-700 hover:text-primary-600 transition-colors">Timeline</a>
        <a href="/religions" class="text-gray-700 hover:text-primary-600 transition-colors">Religions</a>
        <a href="/about" class="text-gray-700 hover:text-primary-600 transition-colors">About</a>
      </nav>
      
      <div class="flex items-center space-x-3">
        <button class="text-gray-700 hover:text-primary-600 transition-colors dark:text-gray-300">
          <Search className="h-5 w-5" />
        </button>
        <button id="header-theme-toggle" class="text-gray-700 hover:text-primary-600 transition-colors dark:text-gray-300">
          <Sun id="header-light-icon" class="h-5 w-5 text-amber-500 hidden" />
          <Moon id="header-dark-icon" class="h-5 w-5 text-indigo-400 hidden" />
        </button>
        <a href="/login" class="btn btn-secondary">Sign In</a>
        <a href="/suggest" class="btn btn-primary">Suggest an Edit</a>
      </div>
    </div>
    
    <button class="md:hidden text-gray-700" id="mobile-menu-toggle">
      <Menu className="h-6 w-6" id="menu-open" />
      <X className="h-6 w-6 hidden" id="menu-close" />
    </button>
  </div>
  
  <!-- Mobile menu -->
  <div class="md:hidden hidden bg-white" id="mobile-menu">
    <nav class="px-4 py-3 space-y-3">
      <a href="/" class="block text-gray-700 hover:text-primary-600 transition-colors py-2">Home</a>
      <a href="/timeline" class="block text-gray-700 hover:text-primary-600 transition-colors py-2">Timeline</a>
      <a href="/religions" class="block text-gray-700 hover:text-primary-600 transition-colors py-2">Religions</a>
      <a href="/about" class="block text-gray-700 hover:text-primary-600 transition-colors py-2">About</a>
      <div class="pt-2 border-t border-gray-200 flex flex-col space-y-3">
        <a href="/login" class="btn btn-secondary w-full">Sign In</a>
        <a href="/suggest" class="btn btn-primary w-full">Suggest an Edit</a>
      </div>
    </nav>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuOpen = document.getElementById('menu-open');
  const menuClose = document.getElementById('menu-close');
  
  if (mobileMenuToggle && mobileMenu && menuOpen && menuClose) {
    mobileMenuToggle.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
      menuOpen.classList.toggle('hidden');
      menuClose.classList.toggle('hidden');
    });
  }
</script>

<script>
  // Theme toggle functionality
  const headerThemeToggle = document.getElementById('header-theme-toggle');
  const headerLightIcon = document.getElementById('header-light-icon');
  const headerDarkIcon = document.getElementById('header-dark-icon');
  
  // Update the icons based on current theme
  const updateHeaderIcons = () => {
    const isDark = document.documentElement.classList.contains('dark');
    headerLightIcon.classList.toggle('hidden', !isDark);
    headerDarkIcon.classList.toggle('hidden', isDark);
  };
  
  // Initialize icons
  updateHeaderIcons();
  
  // Toggle theme when button is clicked
  if (headerThemeToggle && headerLightIcon && headerDarkIcon) {
    headerThemeToggle.addEventListener('click', () => {
      const isDark = document.documentElement.classList.contains('dark');
      const newTheme = isDark ? 'light' : 'dark';
      
      document.documentElement.classList.remove('light', 'dark');
      document.documentElement.classList.add(newTheme);
      
      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('theme', newTheme);
      }
      
      updateHeaderIcons();
      
      // Also update the footer theme toggle if it exists
      const footerLightIcon = document.getElementById('light-icon');
      const footerDarkIcon = document.getElementById('dark-icon');
      
      if (footerLightIcon && footerDarkIcon) {
        footerLightIcon.classList.toggle('hidden', !document.documentElement.classList.contains('dark'));
        footerDarkIcon.classList.toggle('hidden', document.documentElement.classList.contains('dark'));
      }
    });
  }
</script>